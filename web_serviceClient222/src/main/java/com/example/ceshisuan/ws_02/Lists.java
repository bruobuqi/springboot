package com.example.ceshisuan.ws_02;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.0
 * 2019-03-08T19:30:55.935+08:00
 * Generated source version: 3.0.0
 * 
 */
@WebServiceClient(name = "Lists", 
                  wsdlLocation = "file:/D:/002.wsdl",
                  targetNamespace = "http://schemas.microsoft.com/sharepoint/soap/") 
public class Lists extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://schemas.microsoft.com/sharepoint/soap/", "Lists");
    public final static QName ListsSoap12 = new QName("http://schemas.microsoft.com/sharepoint/soap/", "ListsSoap12");
    public final static QName ListsSoap = new QName("http://schemas.microsoft.com/sharepoint/soap/", "ListsSoap");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/002.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Lists.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/D:/002.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Lists(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Lists(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Lists() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public Lists(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public Lists(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public Lists(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    

    /**
     *
     * @return
     *     returns ListsSoap
     */
    @WebEndpoint(name = "ListsSoap12")
    public ListsSoap getListsSoap12() {
        return super.getPort(ListsSoap12, ListsSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ListsSoap
     */
    @WebEndpoint(name = "ListsSoap12")
    public ListsSoap getListsSoap12(WebServiceFeature... features) {
        return super.getPort(ListsSoap12, ListsSoap.class, features);
    }
    /**
     *
     * @return
     *     returns ListsSoap
     */
    @WebEndpoint(name = "ListsSoap")
    public ListsSoap getListsSoap() {
        return super.getPort(ListsSoap, ListsSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ListsSoap
     */
    @WebEndpoint(name = "ListsSoap")
    public ListsSoap getListsSoap(WebServiceFeature... features) {
        return super.getPort(ListsSoap, ListsSoap.class, features);
    }

}
